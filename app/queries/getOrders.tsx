export const getOrdersQuery = (before?: string, after?: string) => `
  query getOrders{
    orders(${before ? "last" : "first"}: 2, sortKey: CREATED_AT, reverse: true, ${after ? `after: "${after}"` : ""} ${before ? `before: "${before}"` : ""}) {
     nodes{
        id
        name,
        currencyCode
        createdAt
        returnStatus
        cancelledAt
        paymentGatewayNames
      	paymentTerms{
          paymentTermsType
          paymentTermsName
        }
        fulfillable
        fulfillments{
          id
          status
          order{
            id
          } 
        }
        subtotalPriceSet{
          shopMoney{
            currencyCode
            amount
          }
        }
        totalTaxSet{
          shopMoney{
            currencyCode
            amount
          }
        }
        totalOutstandingSet{
          shopMoney{
            currencyCode
            amount
          }
        }
        totalShippingPriceSet{
          shopMoney{
            currencyCode
            amount
          }
        }
        totalPriceSet{
          shopMoney{
            amount
            currencyCode
          }
        }
     
        returns(first:10){
          nodes{
            id
            name
            status
            
            returnLineItems(first: 30){
              nodes{
                id
                returnReason
                refundedQuantity
                refundableQuantity
                customerNote
                quantity
              }
            }
            exchangeLineItems(first: 30){
              
              nodes{
                id
                lineItem{
                  id
                  sku
                  variant{
                    id
                  }
                  name
                  title
                  quantity
                  discountedTotalSet{
                    shopMoney{
                      currencyCode
                      amount
                    }
                  }
                  discountedUnitPriceSet{
                    shopMoney{
                      amount
                      currencyCode
                    }
                  }
                  discountedUnitPriceAfterAllDiscountsSet{
                    shopMoney{
                      amount
                      currencyCode
                    }
                  }
                  taxLines(first: 1){
                    priceSet{
                      shopMoney{
                        amount
                        currencyCode
                      }
                    }
                  }
                  originalTotalSet{
                    shopMoney{
                      currencyCode
                      amount
                    }
                  }                                  
                }
              }
            }
          }
        }
        transactions{
          kind
        }
        customer{
          firstName
          lastName
          verifiedEmail
          email
          phone
        }
        shippingAddress{
          address1
          address2
          name
          phone
          company
          city
          country
          province
          provinceCode
        }
        fullyPaid
        
        lineItems(first:20){
          nodes{
            	id
            	sku
              name
            	variant{ 
                id
              }
              title
              quantity
              discountedUnitPriceSet{
                    shopMoney{
                      amount
                      currencyCode
                    }
                  }
                  discountedUnitPriceAfterAllDiscountsSet{
                    shopMoney{
                      amount
                      currencyCode
                    }
                  }
                  taxLines(first: 1){
                    priceSet{
                      shopMoney{
                        amount
                        currencyCode
                      }
                    }
                  }
                  originalTotalSet{
                    shopMoney{
                      currencyCode
                      amount
                    }
                  }
          }
        }
        currentCartDiscountAmountSet{
          presentmentMoney{
            amount
            currencyCode
          }
          shopMoney{
            amount
            currencyCode
          }
        }
      }
    pageInfo{
      hasNextPage
      hasPreviousPage
      endCursor
      startCursor
    }
  }
}
`;
